---+ SWI-Prolog's home

	"Software-Patents" in Europe: The threat prevails European Parliament
	said No to software patents with 648 votes against 14. Open Source and
	smaller innovative compagnies have won a battle, but not yet the war.
	Please be aware of the danger. More info at the [[FFII
	website][<ffii:>]] as well as the [[FSF website][<fsf:>]].

---
---++ And now about SWI-Prolog ...

[[coolstar.gif;align="right",alt="Open directory cool site"][<dmoz_pl:>]]
SWI-Prolog offers a comprehensive [[Free Software][<fsf:>]] Prolog
environment, licensed under the Lesser GNU Public License. Together with
its graphics toolkit [[XPCE][</packages/xpce/>]], its development
started in 1987 and has been driven by the needs for *|real-world
applications|*. These days SWI-Prolog is widely used in research and
education as well as for commercial applications. See our [[download
statistics][</logs/swi-prolog-downloads.jpeg>]].

---++ SWI-Prolog's most important features are

    * Kernel licensed under the [[LGPL][<lgpl:>]]. Prolog libraries are
    distributed under the [[GPL][<gpl:>]] with an additional statement
    that allows for use in proprietary applications. Details can be
    found on the license.txt page.

    * *fast* compilation. E.g., loads 140,000 lines of code spread
    over 500 source-files in 2.3 seconds on an AMD 5400+ system.

    * *Robust* and *|free of memory leaks|*.  In use for several 
    servers that run 24x7 (including this web-service).

    * *Small*. The full development environment, including graphics,
    libraries and many interface packages requires approx. 40MB
    harddisk. The non-graphical kernel is about 650Kb, the graphics
    library adds about 1.2Mb to the image.

    * *Scales* well for large applications. No limits on program size,
    atom-length, term-arity or integer values. No performance
    degradation on predicates with many (indexed) facts.

    * *|Unbounded integer|* and *rational* number arithmetic
    based on [[GMP library][<gmp:>]].

    * Comprehensive set of built-in predicates, covering *|Part 1 of the
    ISO standard|*, the de-facto *Edinburgh* Prolog standard and
    important parts of Quintus and SICStus Prolog. Fair
    compatibility to Ciao, YAP and GNU-Prolog.

    * Flexible and fast interface to the *|C-|* and *|C++-Language|*.
    The interface allows for calling both-ways, handling of
    non-determinism both ways and *embedding* of the SWI-Prolog kernel
    in C/C++ projects.

    * The goodies: *modules* (upward compatible to Quintus and SICStus),
    *|garbage-collection|* (transparent to C/C++-code, including *atom*
    garbage collection), *|last-call|* optimisation, Dynamic expansion
    of the runtime stacks, *|ISO exception-handling|* (including C/C++
    interface for catching and throwing exceptions).

    * Execution *|profiler.txt|* (time and call statistics) for Linux,
    most Unix platforms and Windows NT/2000/XP/Vista.

    * *|[[Cross-Referencer][gxref.txt]]|*. gxref/0 provides a graphical
    front-end for the extensible Prolog cross-referencer (xref).

    * *Portable* to many platforms, including almost all *|Unix/Linux|*
    platforms, *Windows* (NT/2000/XP/Vista, including *|64-bit|*
    editions), *|MacOS X|* (using X11 for graphics) and many more. Both
    32-bits and *|64-bits|* hardware is supported. Sources are plain
    C99, configured automatically using GNU autoconf (configure, make,
    make install).

    * *UNICODE* character set handling internal. Ideal for web- and
    international applications.

    * Machine-independent *|saved-states|* (save on one platform, run
    using the virtual machine of another platform).

    * *|[[Multi-threading][</man/threads.html>]]|* support: run multiple
    pre-emptively scheduled prolog engines on the same database.

    * *|attributed variables|*, coroutining (freeze/2, when/2, dif/2),
    global variables, cyclic terms. Flag-controlled handling of
    occurs-check (on/off/error) see current_prolog_flag/2.

    * *Constraint* Logic Programming, providing libraries for
    *|[[CHR][</man/chr.html>]]|* (Constraint Handling
    Rules), *|[[clp(FD)][</man/clpfd.html>]]|*,
    *|[[clp(R,Q)][</man/clpqr.html>]]|* and various others.

    * Bundled with interface libraries for
    *|[[Java][</packages/jpl/>]]|* (JPL),
    *|[[ODBC][</pldoc/package/odbc.html>]]|*, *|TCP/IP|* sockets,
    *|[[SSL][</pldoc/package/ssl.html>]]|*, *CGI* form handling, etc.
    Check the packages.

    * Multi-threaded *|[[Web server][</pldoc/package/http.html>]]|*
    library with comprehensive libraries to generate HTML,
    HTTP authorization, session management, exchanging JSON (used by
    many AJAX widgets), etc.

    * Fast and flexible libraries for *|[[parsing
    SGML/XML][</pldoc/package/sgml.html>]]|* (HTML),
    *|[[parsing][</pldoc/package/rdf2pl.html>]]|* *RDF*,
    *|[[store and query][</pldoc/package/semweb.html>]]|* the RDF
    _|triple model|_. A graphical editor for RDF/RDFS and OWL models
    called Triple20 is distributed seperately.

    * *|Literate programming|* support through
    *|[[PlDoc][</pldoc/package/pldoc.html>]]|*. Provides integrated view
    on manual and application documentation and producing LaTeX
    documentation for your application.

    * *|Unit testing|* support through
    *|[[PlUnit][</pldoc/package/plunit.html>]]|*.

    * Regular *|binary distributions|* for most popular platforms (Windows
    (32/64 bits), Linux (32 bits) and MacOS X (32 bits)).

    * Regular distribution of the *|full source|* packages. The sources are
    also accesible through [[GIT][</git.html>]]. 
